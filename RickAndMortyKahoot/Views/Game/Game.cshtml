@using RickAndMortyKahoot.Models.Users
@using RickAndMortyKahoot.Models.Games
@using RickAndMortyKahoot.Stores
@using RickAndMortyKahoot.ViewModels
@model GameViewModel
@inject ProjectStore store

<section class="game">
  <input type="hidden" id="game-id" value="@(Model.Game.Id)"
  <header>
    @if (store.Users.TryGetValue(Model.Game.HostId, out User? host))
    {
      <h1>@(host?.Username)'s "kahoot" game</h1>
    }
    else
    {
      <h1>Someone's "kahoot" game</h1>
    }
    <p class="game-code">InviteCode: <span class="game-code__inner">@(Model.Game.InviteCode)</span></p>
  </header>
  <partial name="_UserList" model="new UserListViewModel(Model.Game.UserIds, Model.Game.HostId)" />

  <div class="button-panel">
    @if (Model.CurrentUserId == Model.Game.HostId)
    {
      <button id="leave-and-end-game" type="button" class="secondary secondary--light">Leave and end game</button>
      <button id="start-game" type="button" class="brand primary">Start game</button>
    }
    else
    {
      <button id="leave-game" type="button" class="secondary secondary--light">Leave game</button>
    }
  </div>
</section>

@section styles {
  <link rel="stylesheet" href="~/css/game.css" />
  <link rel="stylesheet" href="~/css/user-list.css" />
}

@section scripts {
  <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
  <script src="~/js/pages/game.js" type="module"></script>
}