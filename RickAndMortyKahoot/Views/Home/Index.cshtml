@using RickAndMortyKahoot.Controllers
@using RickAndMortyKahoot.Models.Games
@using RickAndMortyKahoot.Models.Users
@using System.Text.Json
@using RickAndMortyKahoot.ViewModels
@model UserViewModel
@{
  ViewData["Title"] = "Home";
}

@if (Model.User is null || Model.CurrentUserId is null)
{
  <button onclick="openModal('create-user')">Register</button>
  <partial name="_CreateUserModal" model="new UserPayload()" />
}
else
{
  <input type="hidden" id="user-data" value="@(JsonSerializer.Serialize(Model.User, new JsonSerializerOptions()
    {
      PropertyNamingPolicy = JsonNamingPolicy.CamelCase
    }))" 
  />

  <h1>Hi, @(Model.User.Username)!</h1>
  <div class="button-panel">
    <button id="join-game" type="button" class="primary">Join game</button>
    <p class="or">or</p>
    <button id="create-game" type="button" class="primary">Create game</button>
  </div>

  <partial name="_JoinGameModal" model="new JoinGamePayload(Model.CurrentUserId.Value)" />
}

@section scripts {
  <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
  <script type="module" src="js/pages/home.js"></script>
}